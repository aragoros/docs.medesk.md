Импорт пациентов
================

Импорт пациентов включает в себя выполнение следующих шагов:

1. Подготовить базу пациентов в определенном формате.
1. Определить разрядность операционной системы, на которой будет запущен скрипт
2. На основании сведений шага 1, скачать и установить комплект необходимого программного обеспечения
3. Скачать скрипт импорта пациентов и выполнить его настройку и запуск

Подготовка базы пациентов
-------------------------

Для того чтобы импортировать пациентов в систему сначала необходимо подготовить ``.csv``
файл с данными пациентов для импорта в определенном формате

1. Таблица должна содержать следующие столбцы:

   - Номер карты (MEDESK)	
   - Номер карты (клиника)	
   - Фамилия	
   - Имя	
   - Отчество	
   - Дата рождения	
   - Пол	
   - Почта 1	
   - Почта 2	
   - Телефон 1	
   - Телефон 2	
   - Паспорт (серия)	
   - Паспорт (номер)	
   - Паспорт (кем выдан)	 
   - Паспорт (дата выдачи)	
   - Паспорт (код подразделения)	
   - Свид. о рождении (серия)	
   - Свид. о рождении (номер)
   - Свид. о рождении (кем выдан)
   - Свид. о рождении (дата выдачи)
   - ИНН	 
   - СНИЛС	
   - Номер пенсионного удостоверения	
   - Адрес (индекс)	
   - Адрес (область)	
   - Адрес (населенный пункт)
   - Адрес (улица, дом, кв.)	

2. Первое поле следует оставлять пустым, если пациент до этого не был добавлен в систему.
3. Обязательные поля для заполнения:

   - Фамилия
   - Имя
   - Дата рождения
   - Пол

4. В качестве разделителя в таблице должен использоваться ``tab``

Далее считаем что файл размещен в ``c:\importPatients\patients.csv``

Определение разрядности операционной системы
--------------------------------------------

Все операционные системы можно разделить на два основных типа: 32х- и
64х-разрядные. Знать разрядность системы крайне важно при выборе и установке
программного обеспечения, так как, например, программы, созданные для
работы в 64х-разрядных операционных системах не могут работать на
32х-разрядных. В связи с тем, что Demoxy для нормальной своей работы
требует установки дополнительного программного обеспечения, первым шагом
необходимо узнать разрядность операционной системы, и использовать ее на
шаге 2. во время выбора программного обеспечения.

Windows


`Методика определения разрядности
Windows <http://support.microsoft.com/kb/827218/ru>`__

Определение разрядности Windows можно доверить непосредственно сервису

.. figure:: _static/ii_1.png
   :alt:

или сделать вручную, следуя инструкциям для вашей версии Windows

.. figure:: _static/ii_2.png
   :alt:

Установка комплекта программного обеспечения
--------------------------------------------

Для запуска скрипта требуется провести установку и настройку
базового комплекта программного обеспечения, в который входят:

-  ``Nodejs``

Установка node.js
'''''''''''''''''

Nodejs — программная платформа, которая является
основой для Demoxy и должна быть установлена перед его запуском.
Необходимую версию данного продукта можно скачать с сайта разработчика.

Windows


1. Скачиваем дистрибутив node.js, соответствующий разрядности вашей
   операционной системы:

   `Страница загрузки <https://nodejs.org/en/download/>`__

2. Далее запускаем скачанную программу установки и выполняем следующие
   шаги (опустим разъяснения для некоторых, уже очевидных, этапов):
3. Начало установки. 

   |image0| 
   
   |image1|

4. Далее убедимся, что каталог для установки выставлен по умолчанию так
   же, и нажимаем ``Next``. 
   
   |image2|
5. Если на данном этапе какие-то компоненты отключены - включаем их в
   пакет. 
   
   |image3|
6. Далее нажимаем ``Next``, ``Install`` и завершаем установку.

Получение скрипта и предварительная настройка
---------------------------------------------------------

1. Скачать архив со скриптом для импорта базы пациентов можно 
   `по этой ссылке <___>`__.
2. Создать каталог, в котором будет запущен скрипт (мы предполагаем,
   что используется каталог ``c:\importPatients``)
3. Распаковать архив в созданный каталог (**Важно: перед следующим шагом необходимо
   убедится что в папке находится 2 файла:** ``package.json`` **и** ``index.js``)
4. Запустить командную строку Windows, перейти в каталог со скриптом
   (``c:\importPatients``), и выполнить команду ``npm install``.

   |image5|


Запуск скрипта и процесс работы
-------------------------------

Для запуска скрипта переходим в каталог ``c:\importPatients``. Далее перед
запуском следует определиться с параметрами запуска: 

-  ``-f [path]`` или ``--file [path]`` - путь к подготовленному ``.csv`` файлу
   с базой пациентов
-  ``-u [username]`` или ``--username [username]`` - логин учетной записи MEDESK, 
   от имени которjq в системе будут создаваться пациенты
-  ``-p [password]`` или ``--password [password]`` - логин учетной записи MEDESK, 
   от имени которjq в системе будут создаваться пациенты
-  ``--url [url]`` - сетевой сервера ПДН. Для того чтобы пациенты импортировались
   через локальный сервер ПДН необходимо указать внутренний сетевой адресс ранее 
   локально установленного сервера ПДН.
-  ``--continue`` - если эта опция указана, импорт пациентов будет продолжен с 
   последнего момента остановки скрипта, иначе - пациенты будут созданы заново.

Строка запуска в итоге должна выглядеть следующим образом: 

::

  node index.js --file patients.csv --username user --password pass --url http://192.168.1.10:5000

При первом запуске скрипта необходимо запускать его без опции ``--continue``. 
Если же по какой-либо причине работа скрипта была приостановлена - при следующем запуске
необходимо указать эту опцию.

**Важно: перед запуском необходимо убедится, что у пользователя системы, от имени которого
запускается скрипт, есть права на запись файлов в каталог** ``c:\importPatients``

При первом запуске в каталоге ``c:\importPatients`` будут созданы два файла: 

- ``c:\importPatients\patients_errors.log`` - информация по ошибкам возникшим в процессе работы
  скрипта.
- ``c:\importPatients\patients_hash.dump`` - информация по тому какие пациенты из базы уже были созданы.

В процессе работы, скрипт каждые 10 секунд будет выводить краткий отчет о прогрессе:

|image6|

В каждом блоке: 

- ``Progress`` - прогресс завершенности импорта в %.
- ``Records processed`` - сколько записей было обработано.
- ``Records left`` - сколько записей осталось обработать.
- ``Errors`` - сколько записей не было обработано из-за ошибки.
- ``Success`` - сколько записей было успешно обработано.

.. |image0| image:: _static/ip_1.png
.. |image1| image:: _static/ip_2.png
.. |image2| image:: _static/ip_3.png
.. |image3| image:: _static/ip_4.png
.. |image4| image:: _static/ip_5.png
.. |image5| image:: _static/ip_6.png
.. |image6| image:: _static/ip_7.png